/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.parser;

import net.sf.eclipsecorba.idl.node.*;
import net.sf.eclipsecorba.idl.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTAbstract(TAbstract node)
    {
        index = 0;
    }

    public void caseTAny(TAny node)
    {
        index = 1;
    }

    public void caseTAttribute(TAttribute node)
    {
        index = 2;
    }

    public void caseTBoolean(TBoolean node)
    {
        index = 3;
    }

    public void caseTCase(TCase node)
    {
        index = 4;
    }

    public void caseTChar(TChar node)
    {
        index = 5;
    }

    public void caseTConst(TConst node)
    {
        index = 6;
    }

    public void caseTContext(TContext node)
    {
        index = 7;
    }

    public void caseTCustom(TCustom node)
    {
        index = 8;
    }

    public void caseTDefault(TDefault node)
    {
        index = 9;
    }

    public void caseTDouble(TDouble node)
    {
        index = 10;
    }

    public void caseTEnum(TEnum node)
    {
        index = 11;
    }

    public void caseTException(TException node)
    {
        index = 12;
    }

    public void caseTFactory(TFactory node)
    {
        index = 13;
    }

    public void caseTFalse(TFalse node)
    {
        index = 14;
    }

    public void caseTFixed(TFixed node)
    {
        index = 15;
    }

    public void caseTFloat(TFloat node)
    {
        index = 16;
    }

    public void caseTIn(TIn node)
    {
        index = 17;
    }

    public void caseTInout(TInout node)
    {
        index = 18;
    }

    public void caseTInterface(TInterface node)
    {
        index = 19;
    }

    public void caseTLocal(TLocal node)
    {
        index = 20;
    }

    public void caseTLong(TLong node)
    {
        index = 21;
    }

    public void caseTModule(TModule node)
    {
        index = 22;
    }

    public void caseTNative(TNative node)
    {
        index = 23;
    }

    public void caseTOctet(TOctet node)
    {
        index = 24;
    }

    public void caseTOneway(TOneway node)
    {
        index = 25;
    }

    public void caseTOut(TOut node)
    {
        index = 26;
    }

    public void caseTPrivate(TPrivate node)
    {
        index = 27;
    }

    public void caseTPublic(TPublic node)
    {
        index = 28;
    }

    public void caseTRaises(TRaises node)
    {
        index = 29;
    }

    public void caseTReadonly(TReadonly node)
    {
        index = 30;
    }

    public void caseTSequence(TSequence node)
    {
        index = 31;
    }

    public void caseTShort(TShort node)
    {
        index = 32;
    }

    public void caseTString(TString node)
    {
        index = 33;
    }

    public void caseTStruct(TStruct node)
    {
        index = 34;
    }

    public void caseTSupports(TSupports node)
    {
        index = 35;
    }

    public void caseTSwitch(TSwitch node)
    {
        index = 36;
    }

    public void caseTTrue(TTrue node)
    {
        index = 37;
    }

    public void caseTTruncatable(TTruncatable node)
    {
        index = 38;
    }

    public void caseTTypedef(TTypedef node)
    {
        index = 39;
    }

    public void caseTUnion(TUnion node)
    {
        index = 40;
    }

    public void caseTUnsigned(TUnsigned node)
    {
        index = 41;
    }

    public void caseTValuebase(TValuebase node)
    {
        index = 42;
    }

    public void caseTValuetype(TValuetype node)
    {
        index = 43;
    }

    public void caseTVoid(TVoid node)
    {
        index = 44;
    }

    public void caseTWchar(TWchar node)
    {
        index = 45;
    }

    public void caseTWstring(TWstring node)
    {
        index = 46;
    }

    public void caseTTypeprefix(TTypeprefix node)
    {
        index = 47;
    }

    public void caseTTypeid(TTypeid node)
    {
        index = 48;
    }

    public void caseTLParenthese(TLParenthese node)
    {
        index = 49;
    }

    public void caseTRParenthese(TRParenthese node)
    {
        index = 50;
    }

    public void caseTLBrace(TLBrace node)
    {
        index = 51;
    }

    public void caseTRBrace(TRBrace node)
    {
        index = 52;
    }

    public void caseTLBracket(TLBracket node)
    {
        index = 53;
    }

    public void caseTRBracket(TRBracket node)
    {
        index = 54;
    }

    public void caseTSemicolon(TSemicolon node)
    {
        index = 55;
    }

    public void caseTComma(TComma node)
    {
        index = 56;
    }

    public void caseTColon(TColon node)
    {
        index = 57;
    }

    public void caseTDoublecolon(TDoublecolon node)
    {
        index = 58;
    }

    public void caseTAssign(TAssign node)
    {
        index = 59;
    }

    public void caseTLt(TLt node)
    {
        index = 60;
    }

    public void caseTGt(TGt node)
    {
        index = 61;
    }

    public void caseTTilde(TTilde node)
    {
        index = 62;
    }

    public void caseTPlus(TPlus node)
    {
        index = 63;
    }

    public void caseTMinus(TMinus node)
    {
        index = 64;
    }

    public void caseTStar(TStar node)
    {
        index = 65;
    }

    public void caseTDiv(TDiv node)
    {
        index = 66;
    }

    public void caseTBitAnd(TBitAnd node)
    {
        index = 67;
    }

    public void caseTBitOr(TBitOr node)
    {
        index = 68;
    }

    public void caseTBitXor(TBitXor node)
    {
        index = 69;
    }

    public void caseTMod(TMod node)
    {
        index = 70;
    }

    public void caseTShiftLeft(TShiftLeft node)
    {
        index = 71;
    }

    public void caseTShiftRight(TShiftRight node)
    {
        index = 72;
    }

    public void caseTDocumentationComment(TDocumentationComment node)
    {
        index = 73;
    }

    public void caseTIntegerLiteral(TIntegerLiteral node)
    {
        index = 74;
    }

    public void caseTFixedPtLiteral(TFixedPtLiteral node)
    {
        index = 75;
    }

    public void caseTFloatingPtLiteral(TFloatingPtLiteral node)
    {
        index = 76;
    }

    public void caseTCharacterLiteral(TCharacterLiteral node)
    {
        index = 77;
    }

    public void caseTWideCharacterLiteral(TWideCharacterLiteral node)
    {
        index = 78;
    }

    public void caseTStringLiteral(TStringLiteral node)
    {
        index = 79;
    }

    public void caseTWideStringLiteral(TWideStringLiteral node)
    {
        index = 80;
    }

    public void caseTIdentifier(TIdentifier node)
    {
        index = 81;
    }

    public void caseTDirective(TDirective node)
    {
        index = 82;
    }

    public void caseEOF(EOF node)
    {
        index = 83;
    }
}
