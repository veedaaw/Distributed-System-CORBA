/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class AParamDcl extends PParamDcl
{
    private PParamAttribute _paramAttribute_;
    private PParamTypeSpec _paramTypeSpec_;
    private PDeclarator _declarator_;

    public AParamDcl()
    {
    }

    public AParamDcl(
        PParamAttribute _paramAttribute_,
        PParamTypeSpec _paramTypeSpec_,
        PDeclarator _declarator_)
    {
        setParamAttribute(_paramAttribute_);

        setParamTypeSpec(_paramTypeSpec_);

        setDeclarator(_declarator_);

    }
    public Object clone()
    {
        return new AParamDcl(
            (PParamAttribute) cloneNode(_paramAttribute_),
            (PParamTypeSpec) cloneNode(_paramTypeSpec_),
            (PDeclarator) cloneNode(_declarator_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParamDcl(this);
    }

    public PParamAttribute getParamAttribute()
    {
        return _paramAttribute_;
    }

    public void setParamAttribute(PParamAttribute node)
    {
        if(_paramAttribute_ != null)
        {
            _paramAttribute_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _paramAttribute_ = node;
    }

    public PParamTypeSpec getParamTypeSpec()
    {
        return _paramTypeSpec_;
    }

    public void setParamTypeSpec(PParamTypeSpec node)
    {
        if(_paramTypeSpec_ != null)
        {
            _paramTypeSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _paramTypeSpec_ = node;
    }

    public PDeclarator getDeclarator()
    {
        return _declarator_;
    }

    public void setDeclarator(PDeclarator node)
    {
        if(_declarator_ != null)
        {
            _declarator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _declarator_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_paramAttribute_)
            + toString(_paramTypeSpec_)
            + toString(_declarator_);
    }

    void removeChild(Node child)
    {
        if(_paramAttribute_ == child)
        {
            _paramAttribute_ = null;
            return;
        }

        if(_paramTypeSpec_ == child)
        {
            _paramTypeSpec_ = null;
            return;
        }

        if(_declarator_ == child)
        {
            _declarator_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_paramAttribute_ == oldChild)
        {
            setParamAttribute((PParamAttribute) newChild);
            return;
        }

        if(_paramTypeSpec_ == oldChild)
        {
            setParamTypeSpec((PParamTypeSpec) newChild);
            return;
        }

        if(_declarator_ == oldChild)
        {
            setDeclarator((PDeclarator) newChild);
            return;
        }

    }
}
