/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class ADefaultCaseLabel extends PCaseLabel
{
    private TDefault _default_;
    private TColon _colon_;

    public ADefaultCaseLabel()
    {
    }

    public ADefaultCaseLabel(
        TDefault _default_,
        TColon _colon_)
    {
        setDefault(_default_);

        setColon(_colon_);

    }
    public Object clone()
    {
        return new ADefaultCaseLabel(
            (TDefault) cloneNode(_default_),
            (TColon) cloneNode(_colon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADefaultCaseLabel(this);
    }

    public TDefault getDefault()
    {
        return _default_;
    }

    public void setDefault(TDefault node)
    {
        if(_default_ != null)
        {
            _default_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _default_ = node;
    }

    public TColon getColon()
    {
        return _colon_;
    }

    public void setColon(TColon node)
    {
        if(_colon_ != null)
        {
            _colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _colon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_default_)
            + toString(_colon_);
    }

    void removeChild(Node child)
    {
        if(_default_ == child)
        {
            _default_ = null;
            return;
        }

        if(_colon_ == child)
        {
            _colon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_default_ == oldChild)
        {
            setDefault((TDefault) newChild);
            return;
        }

        if(_colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

    }
}
