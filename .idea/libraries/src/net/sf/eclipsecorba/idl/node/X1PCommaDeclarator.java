/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import net.sf.eclipsecorba.idl.analysis.*;

public final class X1PCommaDeclarator extends XPCommaDeclarator
{
    private XPCommaDeclarator _xPCommaDeclarator_;
    private PCommaDeclarator _pCommaDeclarator_;

    public X1PCommaDeclarator()
    {
    }

    public X1PCommaDeclarator(
        XPCommaDeclarator _xPCommaDeclarator_,
        PCommaDeclarator _pCommaDeclarator_)
    {
        setXPCommaDeclarator(_xPCommaDeclarator_);
        setPCommaDeclarator(_pCommaDeclarator_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPCommaDeclarator getXPCommaDeclarator()
    {
        return _xPCommaDeclarator_;
    }

    public void setXPCommaDeclarator(XPCommaDeclarator node)
    {
        if(_xPCommaDeclarator_ != null)
        {
            _xPCommaDeclarator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPCommaDeclarator_ = node;
    }

    public PCommaDeclarator getPCommaDeclarator()
    {
        return _pCommaDeclarator_;
    }

    public void setPCommaDeclarator(PCommaDeclarator node)
    {
        if(_pCommaDeclarator_ != null)
        {
            _pCommaDeclarator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pCommaDeclarator_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPCommaDeclarator_ == child)
        {
            _xPCommaDeclarator_ = null;
        }

        if(_pCommaDeclarator_ == child)
        {
            _pCommaDeclarator_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPCommaDeclarator_) +
            toString(_pCommaDeclarator_);
    }
}
