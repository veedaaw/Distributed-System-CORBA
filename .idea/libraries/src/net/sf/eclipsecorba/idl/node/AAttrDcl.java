/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class AAttrDcl extends PAttrDcl
{
    private TReadonly _readonly_;
    private TAttribute _attribute_;
    private PParamTypeSpec _paramTypeSpec_;
    private TIdentifier _identifier_;
    private final LinkedList _commaIdentifier_ = new TypedLinkedList(new CommaIdentifier_Cast());

    public AAttrDcl()
    {
    }

    public AAttrDcl(
        TReadonly _readonly_,
        TAttribute _attribute_,
        PParamTypeSpec _paramTypeSpec_,
        TIdentifier _identifier_,
        List _commaIdentifier_)
    {
        setReadonly(_readonly_);

        setAttribute(_attribute_);

        setParamTypeSpec(_paramTypeSpec_);

        setIdentifier(_identifier_);

        {
            this._commaIdentifier_.clear();
            this._commaIdentifier_.addAll(_commaIdentifier_);
        }

    }

    public AAttrDcl(
        TReadonly _readonly_,
        TAttribute _attribute_,
        PParamTypeSpec _paramTypeSpec_,
        TIdentifier _identifier_,
        XPCommaIdentifier _commaIdentifier_)
    {
        setReadonly(_readonly_);

        setAttribute(_attribute_);

        setParamTypeSpec(_paramTypeSpec_);

        setIdentifier(_identifier_);

        if(_commaIdentifier_ != null)
        {
            while(_commaIdentifier_ instanceof X1PCommaIdentifier)
            {
                this._commaIdentifier_.addFirst(((X1PCommaIdentifier) _commaIdentifier_).getPCommaIdentifier());
                _commaIdentifier_ = ((X1PCommaIdentifier) _commaIdentifier_).getXPCommaIdentifier();
            }
            this._commaIdentifier_.addFirst(((X2PCommaIdentifier) _commaIdentifier_).getPCommaIdentifier());
        }

    }
    public Object clone()
    {
        return new AAttrDcl(
            (TReadonly) cloneNode(_readonly_),
            (TAttribute) cloneNode(_attribute_),
            (PParamTypeSpec) cloneNode(_paramTypeSpec_),
            (TIdentifier) cloneNode(_identifier_),
            cloneList(_commaIdentifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAttrDcl(this);
    }

    public TReadonly getReadonly()
    {
        return _readonly_;
    }

    public void setReadonly(TReadonly node)
    {
        if(_readonly_ != null)
        {
            _readonly_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _readonly_ = node;
    }

    public TAttribute getAttribute()
    {
        return _attribute_;
    }

    public void setAttribute(TAttribute node)
    {
        if(_attribute_ != null)
        {
            _attribute_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _attribute_ = node;
    }

    public PParamTypeSpec getParamTypeSpec()
    {
        return _paramTypeSpec_;
    }

    public void setParamTypeSpec(PParamTypeSpec node)
    {
        if(_paramTypeSpec_ != null)
        {
            _paramTypeSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _paramTypeSpec_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public LinkedList getCommaIdentifier()
    {
        return _commaIdentifier_;
    }

    public void setCommaIdentifier(List list)
    {
        _commaIdentifier_.clear();
        _commaIdentifier_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_readonly_)
            + toString(_attribute_)
            + toString(_paramTypeSpec_)
            + toString(_identifier_)
            + toString(_commaIdentifier_);
    }

    void removeChild(Node child)
    {
        if(_readonly_ == child)
        {
            _readonly_ = null;
            return;
        }

        if(_attribute_ == child)
        {
            _attribute_ = null;
            return;
        }

        if(_paramTypeSpec_ == child)
        {
            _paramTypeSpec_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_commaIdentifier_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_readonly_ == oldChild)
        {
            setReadonly((TReadonly) newChild);
            return;
        }

        if(_attribute_ == oldChild)
        {
            setAttribute((TAttribute) newChild);
            return;
        }

        if(_paramTypeSpec_ == oldChild)
        {
            setParamTypeSpec((PParamTypeSpec) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        for(ListIterator i = _commaIdentifier_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class CommaIdentifier_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PCommaIdentifier node = (PCommaIdentifier) o;

            if((node.parent() != null) &&
                (node.parent() != AAttrDcl.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AAttrDcl.this))
            {
                node.parent(AAttrDcl.this);
            }

            return node;
        }
    }
}
