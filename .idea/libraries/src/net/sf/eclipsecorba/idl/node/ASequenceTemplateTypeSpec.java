/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class ASequenceTemplateTypeSpec extends PTemplateTypeSpec
{
    private PSequenceType _sequenceType_;

    public ASequenceTemplateTypeSpec()
    {
    }

    public ASequenceTemplateTypeSpec(
        PSequenceType _sequenceType_)
    {
        setSequenceType(_sequenceType_);

    }
    public Object clone()
    {
        return new ASequenceTemplateTypeSpec(
            (PSequenceType) cloneNode(_sequenceType_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASequenceTemplateTypeSpec(this);
    }

    public PSequenceType getSequenceType()
    {
        return _sequenceType_;
    }

    public void setSequenceType(PSequenceType node)
    {
        if(_sequenceType_ != null)
        {
            _sequenceType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _sequenceType_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_sequenceType_);
    }

    void removeChild(Node child)
    {
        if(_sequenceType_ == child)
        {
            _sequenceType_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_sequenceType_ == oldChild)
        {
            setSequenceType((PSequenceType) newChild);
            return;
        }

    }
}
