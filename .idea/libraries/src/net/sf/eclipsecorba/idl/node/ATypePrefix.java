/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class ATypePrefix extends PTypePrefix
{
    private TTypeprefix _typeprefix_;
    private TIdentifier _identifier_;
    private TStringLiteral _stringLiteral_;

    public ATypePrefix()
    {
    }

    public ATypePrefix(
        TTypeprefix _typeprefix_,
        TIdentifier _identifier_,
        TStringLiteral _stringLiteral_)
    {
        setTypeprefix(_typeprefix_);

        setIdentifier(_identifier_);

        setStringLiteral(_stringLiteral_);

    }
    public Object clone()
    {
        return new ATypePrefix(
            (TTypeprefix) cloneNode(_typeprefix_),
            (TIdentifier) cloneNode(_identifier_),
            (TStringLiteral) cloneNode(_stringLiteral_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATypePrefix(this);
    }

    public TTypeprefix getTypeprefix()
    {
        return _typeprefix_;
    }

    public void setTypeprefix(TTypeprefix node)
    {
        if(_typeprefix_ != null)
        {
            _typeprefix_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _typeprefix_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public TStringLiteral getStringLiteral()
    {
        return _stringLiteral_;
    }

    public void setStringLiteral(TStringLiteral node)
    {
        if(_stringLiteral_ != null)
        {
            _stringLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _stringLiteral_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_typeprefix_)
            + toString(_identifier_)
            + toString(_stringLiteral_);
    }

    void removeChild(Node child)
    {
        if(_typeprefix_ == child)
        {
            _typeprefix_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_stringLiteral_ == child)
        {
            _stringLiteral_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_typeprefix_ == oldChild)
        {
            setTypeprefix((TTypeprefix) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_stringLiteral_ == oldChild)
        {
            setStringLiteral((TStringLiteral) newChild);
            return;
        }

    }
}
