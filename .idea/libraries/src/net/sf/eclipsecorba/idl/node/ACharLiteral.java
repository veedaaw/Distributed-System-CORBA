/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class ACharLiteral extends PLiteral
{
    private TCharacterLiteral _characterLiteral_;

    public ACharLiteral()
    {
    }

    public ACharLiteral(
        TCharacterLiteral _characterLiteral_)
    {
        setCharacterLiteral(_characterLiteral_);

    }
    public Object clone()
    {
        return new ACharLiteral(
            (TCharacterLiteral) cloneNode(_characterLiteral_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACharLiteral(this);
    }

    public TCharacterLiteral getCharacterLiteral()
    {
        return _characterLiteral_;
    }

    public void setCharacterLiteral(TCharacterLiteral node)
    {
        if(_characterLiteral_ != null)
        {
            _characterLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _characterLiteral_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_characterLiteral_);
    }

    void removeChild(Node child)
    {
        if(_characterLiteral_ == child)
        {
            _characterLiteral_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_characterLiteral_ == oldChild)
        {
            setCharacterLiteral((TCharacterLiteral) newChild);
            return;
        }

    }
}
