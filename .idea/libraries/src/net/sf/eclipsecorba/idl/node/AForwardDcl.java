/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class AForwardDcl extends PForwardDcl
{
    private PInterfaceModifier _interfaceModifier_;
    private TInterface _interface_;
    private TIdentifier _identifier_;

    public AForwardDcl()
    {
    }

    public AForwardDcl(
        PInterfaceModifier _interfaceModifier_,
        TInterface _interface_,
        TIdentifier _identifier_)
    {
        setInterfaceModifier(_interfaceModifier_);

        setInterface(_interface_);

        setIdentifier(_identifier_);

    }
    public Object clone()
    {
        return new AForwardDcl(
            (PInterfaceModifier) cloneNode(_interfaceModifier_),
            (TInterface) cloneNode(_interface_),
            (TIdentifier) cloneNode(_identifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForwardDcl(this);
    }

    public PInterfaceModifier getInterfaceModifier()
    {
        return _interfaceModifier_;
    }

    public void setInterfaceModifier(PInterfaceModifier node)
    {
        if(_interfaceModifier_ != null)
        {
            _interfaceModifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _interfaceModifier_ = node;
    }

    public TInterface getInterface()
    {
        return _interface_;
    }

    public void setInterface(TInterface node)
    {
        if(_interface_ != null)
        {
            _interface_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _interface_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_interfaceModifier_)
            + toString(_interface_)
            + toString(_identifier_);
    }

    void removeChild(Node child)
    {
        if(_interfaceModifier_ == child)
        {
            _interfaceModifier_ = null;
            return;
        }

        if(_interface_ == child)
        {
            _interface_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_interfaceModifier_ == oldChild)
        {
            setInterfaceModifier((PInterfaceModifier) newChild);
            return;
        }

        if(_interface_ == oldChild)
        {
            setInterface((TInterface) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

    }
}
