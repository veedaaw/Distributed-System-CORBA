/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class AWstringLiteral extends PLiteral
{
    private TWideStringLiteral _wideStringLiteral_;

    public AWstringLiteral()
    {
    }

    public AWstringLiteral(
        TWideStringLiteral _wideStringLiteral_)
    {
        setWideStringLiteral(_wideStringLiteral_);

    }
    public Object clone()
    {
        return new AWstringLiteral(
            (TWideStringLiteral) cloneNode(_wideStringLiteral_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAWstringLiteral(this);
    }

    public TWideStringLiteral getWideStringLiteral()
    {
        return _wideStringLiteral_;
    }

    public void setWideStringLiteral(TWideStringLiteral node)
    {
        if(_wideStringLiteral_ != null)
        {
            _wideStringLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _wideStringLiteral_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_wideStringLiteral_);
    }

    void removeChild(Node child)
    {
        if(_wideStringLiteral_ == child)
        {
            _wideStringLiteral_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_wideStringLiteral_ == oldChild)
        {
            setWideStringLiteral((TWideStringLiteral) newChild);
            return;
        }

    }
}
