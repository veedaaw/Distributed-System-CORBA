/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class AAddExprShiftExpr extends PShiftExpr
{
    private PAddExpr _addExpr_;

    public AAddExprShiftExpr()
    {
    }

    public AAddExprShiftExpr(
        PAddExpr _addExpr_)
    {
        setAddExpr(_addExpr_);

    }
    public Object clone()
    {
        return new AAddExprShiftExpr(
            (PAddExpr) cloneNode(_addExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAddExprShiftExpr(this);
    }

    public PAddExpr getAddExpr()
    {
        return _addExpr_;
    }

    public void setAddExpr(PAddExpr node)
    {
        if(_addExpr_ != null)
        {
            _addExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _addExpr_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_addExpr_);
    }

    void removeChild(Node child)
    {
        if(_addExpr_ == child)
        {
            _addExpr_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_addExpr_ == oldChild)
        {
            setAddExpr((PAddExpr) newChild);
            return;
        }

    }
}
