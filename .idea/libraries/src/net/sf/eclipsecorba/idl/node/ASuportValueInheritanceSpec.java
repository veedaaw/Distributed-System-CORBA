/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class ASuportValueInheritanceSpec extends PValueInheritanceSpec
{
    private TSupports _supports_;
    private PScopedName _scopedName_;
    private final LinkedList _commaScopedName_ = new TypedLinkedList(new CommaScopedName_Cast());

    public ASuportValueInheritanceSpec()
    {
    }

    public ASuportValueInheritanceSpec(
        TSupports _supports_,
        PScopedName _scopedName_,
        List _commaScopedName_)
    {
        setSupports(_supports_);

        setScopedName(_scopedName_);

        {
            this._commaScopedName_.clear();
            this._commaScopedName_.addAll(_commaScopedName_);
        }

    }

    public ASuportValueInheritanceSpec(
        TSupports _supports_,
        PScopedName _scopedName_,
        XPCommaScopedName _commaScopedName_)
    {
        setSupports(_supports_);

        setScopedName(_scopedName_);

        if(_commaScopedName_ != null)
        {
            while(_commaScopedName_ instanceof X1PCommaScopedName)
            {
                this._commaScopedName_.addFirst(((X1PCommaScopedName) _commaScopedName_).getPCommaScopedName());
                _commaScopedName_ = ((X1PCommaScopedName) _commaScopedName_).getXPCommaScopedName();
            }
            this._commaScopedName_.addFirst(((X2PCommaScopedName) _commaScopedName_).getPCommaScopedName());
        }

    }
    public Object clone()
    {
        return new ASuportValueInheritanceSpec(
            (TSupports) cloneNode(_supports_),
            (PScopedName) cloneNode(_scopedName_),
            cloneList(_commaScopedName_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASuportValueInheritanceSpec(this);
    }

    public TSupports getSupports()
    {
        return _supports_;
    }

    public void setSupports(TSupports node)
    {
        if(_supports_ != null)
        {
            _supports_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _supports_ = node;
    }

    public PScopedName getScopedName()
    {
        return _scopedName_;
    }

    public void setScopedName(PScopedName node)
    {
        if(_scopedName_ != null)
        {
            _scopedName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _scopedName_ = node;
    }

    public LinkedList getCommaScopedName()
    {
        return _commaScopedName_;
    }

    public void setCommaScopedName(List list)
    {
        _commaScopedName_.clear();
        _commaScopedName_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_supports_)
            + toString(_scopedName_)
            + toString(_commaScopedName_);
    }

    void removeChild(Node child)
    {
        if(_supports_ == child)
        {
            _supports_ = null;
            return;
        }

        if(_scopedName_ == child)
        {
            _scopedName_ = null;
            return;
        }

        if(_commaScopedName_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_supports_ == oldChild)
        {
            setSupports((TSupports) newChild);
            return;
        }

        if(_scopedName_ == oldChild)
        {
            setScopedName((PScopedName) newChild);
            return;
        }

        for(ListIterator i = _commaScopedName_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class CommaScopedName_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PCommaScopedName node = (PCommaScopedName) o;

            if((node.parent() != null) &&
                (node.parent() != ASuportValueInheritanceSpec.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != ASuportValueInheritanceSpec.this))
            {
                node.parent(ASuportValueInheritanceSpec.this);
            }

            return node;
        }
    }
}
