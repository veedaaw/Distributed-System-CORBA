/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class AValueHeader extends PValueHeader
{
    private TCustom _custom_;
    private TValuetype _valuetype_;
    private TIdentifier _identifier_;
    private PValueInheritanceSpec _valueInheritanceSpec_;

    public AValueHeader()
    {
    }

    public AValueHeader(
        TCustom _custom_,
        TValuetype _valuetype_,
        TIdentifier _identifier_,
        PValueInheritanceSpec _valueInheritanceSpec_)
    {
        setCustom(_custom_);

        setValuetype(_valuetype_);

        setIdentifier(_identifier_);

        setValueInheritanceSpec(_valueInheritanceSpec_);

    }
    public Object clone()
    {
        return new AValueHeader(
            (TCustom) cloneNode(_custom_),
            (TValuetype) cloneNode(_valuetype_),
            (TIdentifier) cloneNode(_identifier_),
            (PValueInheritanceSpec) cloneNode(_valueInheritanceSpec_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAValueHeader(this);
    }

    public TCustom getCustom()
    {
        return _custom_;
    }

    public void setCustom(TCustom node)
    {
        if(_custom_ != null)
        {
            _custom_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _custom_ = node;
    }

    public TValuetype getValuetype()
    {
        return _valuetype_;
    }

    public void setValuetype(TValuetype node)
    {
        if(_valuetype_ != null)
        {
            _valuetype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _valuetype_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public PValueInheritanceSpec getValueInheritanceSpec()
    {
        return _valueInheritanceSpec_;
    }

    public void setValueInheritanceSpec(PValueInheritanceSpec node)
    {
        if(_valueInheritanceSpec_ != null)
        {
            _valueInheritanceSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _valueInheritanceSpec_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_custom_)
            + toString(_valuetype_)
            + toString(_identifier_)
            + toString(_valueInheritanceSpec_);
    }

    void removeChild(Node child)
    {
        if(_custom_ == child)
        {
            _custom_ = null;
            return;
        }

        if(_valuetype_ == child)
        {
            _valuetype_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_valueInheritanceSpec_ == child)
        {
            _valueInheritanceSpec_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_custom_ == oldChild)
        {
            setCustom((TCustom) newChild);
            return;
        }

        if(_valuetype_ == oldChild)
        {
            setValuetype((TValuetype) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_valueInheritanceSpec_ == oldChild)
        {
            setValueInheritanceSpec((PValueInheritanceSpec) newChild);
            return;
        }

    }
}
