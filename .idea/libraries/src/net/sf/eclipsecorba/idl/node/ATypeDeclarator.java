/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class ATypeDeclarator extends PTypeDeclarator
{
    private TTypedef _typedef_;
    private PTypeSpec _typeSpec_;
    private PDeclarators _declarators_;

    public ATypeDeclarator()
    {
    }

    public ATypeDeclarator(
        TTypedef _typedef_,
        PTypeSpec _typeSpec_,
        PDeclarators _declarators_)
    {
        setTypedef(_typedef_);

        setTypeSpec(_typeSpec_);

        setDeclarators(_declarators_);

    }
    public Object clone()
    {
        return new ATypeDeclarator(
            (TTypedef) cloneNode(_typedef_),
            (PTypeSpec) cloneNode(_typeSpec_),
            (PDeclarators) cloneNode(_declarators_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATypeDeclarator(this);
    }

    public TTypedef getTypedef()
    {
        return _typedef_;
    }

    public void setTypedef(TTypedef node)
    {
        if(_typedef_ != null)
        {
            _typedef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _typedef_ = node;
    }

    public PTypeSpec getTypeSpec()
    {
        return _typeSpec_;
    }

    public void setTypeSpec(PTypeSpec node)
    {
        if(_typeSpec_ != null)
        {
            _typeSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _typeSpec_ = node;
    }

    public PDeclarators getDeclarators()
    {
        return _declarators_;
    }

    public void setDeclarators(PDeclarators node)
    {
        if(_declarators_ != null)
        {
            _declarators_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _declarators_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_typedef_)
            + toString(_typeSpec_)
            + toString(_declarators_);
    }

    void removeChild(Node child)
    {
        if(_typedef_ == child)
        {
            _typedef_ = null;
            return;
        }

        if(_typeSpec_ == child)
        {
            _typeSpec_ = null;
            return;
        }

        if(_declarators_ == child)
        {
            _declarators_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_typedef_ == oldChild)
        {
            setTypedef((TTypedef) newChild);
            return;
        }

        if(_typeSpec_ == oldChild)
        {
            setTypeSpec((PTypeSpec) newChild);
            return;
        }

        if(_declarators_ == oldChild)
        {
            setDeclarators((PDeclarators) newChild);
            return;
        }

    }
}
