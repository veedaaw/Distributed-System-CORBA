/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.eclipsecorba.idl.node;

import java.util.*;
import net.sf.eclipsecorba.idl.analysis.*;

public final class ACommaInitParamDecl extends PCommaInitParamDecl
{
    private TComma _comma_;
    private PInitParamDecl _initParamDecl_;

    public ACommaInitParamDecl()
    {
    }

    public ACommaInitParamDecl(
        TComma _comma_,
        PInitParamDecl _initParamDecl_)
    {
        setComma(_comma_);

        setInitParamDecl(_initParamDecl_);

    }
    public Object clone()
    {
        return new ACommaInitParamDecl(
            (TComma) cloneNode(_comma_),
            (PInitParamDecl) cloneNode(_initParamDecl_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACommaInitParamDecl(this);
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PInitParamDecl getInitParamDecl()
    {
        return _initParamDecl_;
    }

    public void setInitParamDecl(PInitParamDecl node)
    {
        if(_initParamDecl_ != null)
        {
            _initParamDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _initParamDecl_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_comma_)
            + toString(_initParamDecl_);
    }

    void removeChild(Node child)
    {
        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_initParamDecl_ == child)
        {
            _initParamDecl_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_initParamDecl_ == oldChild)
        {
            setInitParamDecl((PInitParamDecl) newChild);
            return;
        }

    }
}
